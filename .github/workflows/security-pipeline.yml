name: Secure CI Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  security-pipeline:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint with security plugins
        run: npx eslint . --ext .ts,.js

      - name: Run npm audit for known vulnerabilities
        run: npm audit --audit-level=moderate || true

      - name: Build the project
        run: npm run build

      - name: Inject .env file for Docker builds
        run: |
          echo "VIRUSTOTAL_API_KEY=${{ secrets.VIRUSTOTAL_API_KEY }}" > .env
          echo "PORT=${{ secrets.PORT }}" >> .env

      - name: Build Analyzer Docker image
        run: docker build -t linkcheck-analyzer -f analyzer/Dockerfile .

      - name: Build Backend Docker image
        run: docker build -t linkcheck-backend -f Dockerfile .

      - name: Run Trivy vulnerability scanner on Analyzer Docker image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: linkcheck-analyzer
          format: 'table'
          severity: 'CRITICAL,HIGH'

      - name: Run Trivy vulnerability scanner on Backend Docker image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: linkcheck-backend
          format: 'table'
          severity: 'CRITICAL,HIGH'

  dast-scan:
    runs-on: ubuntu-latest
    needs: security-pipeline

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Docker Compose
        run: sudo apt-get install -y docker-compose

      - name: Inject .env file for Docker Compose
        run: |
          echo "VIRUSTOTAL_API_KEY=${{ secrets.VIRUSTOTAL_API_KEY }}" > .env
          echo "PORT=${{ secrets.PORT }}" >> .env

      - name: Start Docker services
        run: docker-compose up -d

      - name: Run OWASP ZAP Baseline Scan
        uses: zaproxy/action-baseline@v0.9.0
        with:
          target: 'http://localhost:${{ secrets.PORT }}'
        continue-on-error: true
